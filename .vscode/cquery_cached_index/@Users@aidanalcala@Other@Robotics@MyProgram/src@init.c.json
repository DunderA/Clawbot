15
{"last_modification_time":1608324270,"language":1,"import_file":"/Users/aidanalcala/Other/Robotics/MyProgram/src/init.c","args":["clang++","-working-directory=/Users/aidanalcala/Other/Robotics/MyProgram","--driver-mode=g++","-target","armv7ar-none-none-eabi","-isystem/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/bin/../lib/gcc/arm-none-eabi/9.3.1/include","-isystem/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/bin/../lib/gcc/arm-none-eabi/9.3.1/include-fixed","-isystem/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/bin/../lib/gcc/arm-none-eabi/9.3.1/../../../../arm-none-eabi/include","-isystem./include","-iquote./include/./","-mthumb","-mcpu=cortex-m3","-mlittle-endian","-Os","-ffunction-sections","-fsigned-char","-fomit-frame-pointer","-fsingle-precision-constant","-fdiagnostics-color","-std=gnu99","/Users/aidanalcala/Other/Robotics/MyProgram/src/init.c","-resource-dir=/usr/local/Cellar/llvm/9.0.0/lib/clang/9.0.0","-Wno-unknown-warning-option","-fparse-all-comments","-isystem/usr/local/include","-isystem/Library/Developer/CommandLineTools/usr/lib/clang/12.0.0/include","-isystem/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include","-isystem/Library/Developer/CommandLineTools/usr/include","-iframework/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/System/Library/Frameworks"],"includes":[{"line":9,"resolved_path":"/Users/aidanalcala/Other/Robotics/MyProgram/include/main.h"}],"dependencies":["/Users/aidanalcala/Other/Robotics/MyProgram/include/main.h","/Users/aidanalcala/Other/Robotics/MyProgram/include/API.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/stdlib.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/_ansi.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/newlib.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/sys/config.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/sys/features.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/sys/reent.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/sys/_types.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/machine/_types.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/machine/_default_types.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/sys/lock.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/sys/cdefs.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/alloca.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/lib/gcc/arm-none-eabi/9.3.1/include/stdint.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/stdint.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/sys/_intsup.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/sys/_stdint.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/lib/gcc/arm-none-eabi/9.3.1/include/stddef.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/lib/gcc/arm-none-eabi/9.3.1/include/stdarg.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/machine/ieeefp.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/_newlib_version.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/arm-none-eabi/include/machine/stdlib.h","/usr/local/Cellar/arm-gcc-bin/9-2020-q2-update/lib/gcc/arm-none-eabi/9.3.1/include/stdbool.h"],"skipped_by_preprocessor":[],"types":[],"funcs":[{"id":0,"usr":11829288557914536649,"detailed_name":"void initializeIO()","short_name_offset":5,"short_name_size":12,"kind":12,"storage":1,"hover":"","comments":"\r\n Runs pre-initialization code. This function will be started in kernel mode one time while the\r\n VEX Cortex is starting up. As the scheduler is still paused, most API functions will fail.\r\n\r\n The purpose of this function is solely to set the default pin modes (pinMode()) and port\r\n states (digitalWrite()) of limit switches, push buttons, and solenoids. It can also safely\r\n configure a UART port (usartOpen()) but cannot set up an LCD (lcdInit()).","declarations":[],"spell":"21:6-21:18|-1|1|2","extent":"21:1-31:2|-1|1|0","bases":[],"derived":[],"vars":[],"uses":[],"callees":["23:1-23:8|1|3|36","24:1-24:8|1|3|36","26:16-26:27|2|3|36","27:19-27:30|2|3|36","29:13-29:27|3|3|36"]},{"id":1,"usr":11146228526319408947,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["23:1-23:8|0|3|36","24:1-24:8|0|3|36"],"callees":[]},{"id":2,"usr":10765667924168564179,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["26:16-26:27|0|3|36","27:19-27:30|0|3|36"],"callees":[]},{"id":3,"usr":6533158269121502954,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["29:13-29:27|0|3|36"],"callees":[]},{"id":4,"usr":11349631069955763835,"detailed_name":"void initialize()","short_name_offset":5,"short_name_size":10,"kind":12,"storage":1,"hover":"","comments":"\r\n Runs user initialization code. This function will be started in its own task with the default\r\n priority and stack size once when the robot is starting up. It is possible that the VEXnet\r\n communication link may not be fully established at this time, so reading from the VEX\r\n Joystick may fail.\r\n\r\n This function should initialize most sensors (gyro, encoders, ultrasonics), LCDs, global\r\n variables, and IMEs.\r\n\r\n This function must exit relatively promptly, or the operatorControl() and autonomous() tasks\r\n will not start. An autonomous mode selection menu like the pre_auton() in other environments\r\n can be implemented in this task if desired.","declarations":[],"spell":"46:6-46:16|-1|1|2","extent":"46:1-51:2|-1|1|0","bases":[],"derived":[],"vars":[],"uses":[],"callees":["48:3-48:18|5|3|36","49:3-49:18|5|3|36","50:3-50:18|5|3|36"]},{"id":5,"usr":3608377712931685227,"detailed_name":"","short_name_offset":0,"short_name_size":0,"kind":0,"storage":0,"hover":"","comments":"","declarations":[],"bases":[],"derived":[],"vars":[],"uses":["48:3-48:18|4|3|36","49:3-49:18|4|3|36","50:3-50:18|4|3|36"],"callees":[]}],"vars":[{"id":0,"usr":268459179255090946,"detailed_name":"","short_name_offset":0,"short_name_size":0,"hover":"","comments":"","declarations":[],"uses":["26:1-26:13|0|3|20"],"kind":0,"storage":0},{"id":1,"usr":7864040924281776,"detailed_name":"","short_name_offset":0,"short_name_size":0,"hover":"","comments":"","declarations":[],"uses":["27:1-27:16|0|3|20"],"kind":0,"storage":0},{"id":2,"usr":17034411003819527778,"detailed_name":"","short_name_offset":0,"short_name_size":0,"hover":"","comments":"","declarations":[],"uses":["29:1-29:11|0|3|20"],"kind":0,"storage":0},{"id":3,"usr":1461043564090984268,"detailed_name":"ELBOWLIMIT","short_name_offset":0,"short_name_size":10,"hover":"#define ELBOWLIMIT 6","comments":"","declarations":[],"spell":"11:9-11:19|-1|1|2","extent":"11:9-11:21|-1|1|0","uses":["23:9-23:19|-1|1|4"],"kind":255,"storage":0},{"id":4,"usr":13362276001072586690,"detailed_name":"SHOULDERLIMIT","short_name_offset":0,"short_name_size":13,"hover":"#define SHOULDERLIMIT 7","comments":"","declarations":[],"spell":"12:9-12:22|-1|1|2","extent":"12:9-12:24|-1|1|0","uses":["24:9-24:22|-1|1|4"],"kind":255,"storage":0},{"id":5,"usr":3059185252552088408,"detailed_name":"","short_name_offset":0,"short_name_size":0,"hover":"","comments":"","declarations":[],"uses":["23:20-23:25|-1|1|4","24:23-24:28|-1|1|4"],"kind":0,"storage":0},{"id":6,"usr":11704401161668865448,"detailed_name":"","short_name_offset":0,"short_name_size":0,"hover":"","comments":"","declarations":[],"uses":["26:32-26:37|-1|1|4"],"kind":0,"storage":0},{"id":7,"usr":16076141502039815893,"detailed_name":"","short_name_offset":0,"short_name_size":0,"hover":"","comments":"","declarations":[],"uses":["27:35-27:39|-1|1|4"],"kind":0,"storage":0}]}